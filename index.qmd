---
title: "**Calidad de aire**"
lang: es
layout: full
mainfont: "Roboto Sans Serif"
format: 
  dashboard:
    orientation: columns
    theme: 
      light: cosmo
      dark: darkly
css: estilo.css
execute: 
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false
library(tidyverse)
library(openair)
library(openxlsx)
library(zoo)
library(ggthemes)
library(ggforce)
library(patchwork)
library(ggrepel)
library(openairmaps)
library(leaflet)
library(leaflet.extras)
library(plotly)
library(highcharter)
source("Scripts/ECA.R")

# Cargando datos del punto de hipólito unanue:
df <- ECA(meteo = "input/CR1000_JULIO_2024.csv",
          gases = "input/eca_2024_julio.csv",
          pm = "input/pm_junio.csv",
          fecha_inicio = "2024-06-21",
          fecha_fin = "2024-06-30",
          estacion = "Unanue",
          tipo = "lista")

df1 <- ECA(meteo = "input/CR1000_JULIO_2024.csv",
           gases = "input/eca_2024_julio.csv",
           pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
           fecha_inicio = "2024-07-17",
           fecha_fin = "2024-07-31",
           estacion = "Vigil",
           tipo = "lista")

df2 <- ECA(meteo = "input/CR1000_AGOSTO_2024.csv",
           gases = "input/gases_odria_agosto.csv",
           pm = "input/pm_agosto_odria.csv",
           fecha_inicio = "2024-08-08",
           fecha_fin = "2024-08-18",
           estacion = "Odría",
           tipo = "lista")

df3 <- ECA(meteo = "input/CR1000_AGOSTO_UNJBG_2024.csv",
           gases = "input/GASES_AGOSTO_EPSG-UNJBG_2024.csv",
           pm = "input/pm_agosto_epsg_unjbg.csv",
           fecha_inicio = "2024-08-23",
           fecha_fin = "2024-08-31",
           estacion = "epsg_unjbg",
           tipo = "lista")
```
# **Datos del 2024**
## Mapa web 2 {.tabset width=70%}

```{r}
#| title: "Rosas de viento"
dfm <- df$df %>% mutate(lat = -18.004275, lon = -70.257304,
                        estacion = "EMCA - 01")

dfm1 <- df1$df %>% mutate(lat = -17.993250, lon = -70.243305,
                        estacion = "EMCA - 02")

dfm2 <- df2$df %>% mutate(lat = -17.980364, lon = -70.239032,
                        estacion = "EMCA - 03")

dfm3 <- df3$df %>% mutate(lat = -18.00676, lon = -70.23816,
                        estacion = "EMCA - 04")

dfm <- rbind(dfm, dfm1, dfm2, dfm3)
dfm$co <- NULL
dfm <- dfm %>% mutate(co = co_1) %>% select(-co_1)

coloreo <- c("#D95F02","yellow","#A6DBA0","#008837","#2171B5","#7B3294","#E7298A")

windroseMap(data = dfm,
            latitude = "lat",
            longitude = "lon",
            col = coloreo,
            paddle = F,
            d.icon = 300, popup = "estacion",
            breaks = c(0,0.2,0.3,1.5, 1.6, 3.3, 3.4, 5.4),
            provider = c("CartoDB.Positron",
                      "OpenStreetMap", "Esri.WorldImagery"),
            legend.title = "Velocidad\ndel viento (m/s)",
            control.collapsed = TRUE, legend) %>% 
  leaflet::addMarkers(label = ~ estacion,
    labelOptions = labelOptions(noHide = FALSE, textOnly = FALSE,
                                style = list(
                                  "color" = "black",
                                  "font-family" = "arial",
                                  "font-style" = "bold",
                                  "box-shadow" = "3px 3px rgba(0,0,0,0.15)",
                                  "font-size" = "20px",
                                  "border-color" = "rgba(0,0,0,0.15)"
                                ))) %>% 
  addMeasure(primaryLengthUnit = "meters",
             primaryAreaUnit = "sqmeters") %>%  # Herramienta para medir distancias y áreas
  addSearchOSM() %>%  # Caja de búsqueda
  addMiniMap(minimized = TRUE) %>%  # Mapa en miniatura
  addFullscreenControl()

```

```{r}
#| title: "Gráficos polares"
polarMap(data = dfm,
         pollutant = c("pm10", "pm25", "no2",
                       "o3", "so2", "h2s", "co"),
         latitude = "lat",
         longitude = "lon",
         alpha = 0.85, cols = "jet",
         label = "estacion",
         provider = c("CartoDB.Positron",
                      "OpenStreetMap", "Esri.WorldImagery"),
         popup = "estacion", key = T,
         draw.legend = FALSE, control.collapsed = TRUE) %>% 
    leaflet::addMarkers(label = ~ estacion,
    labelOptions = labelOptions(noHide = FALSE, textOnly = FALSE,
                                style = list(
                                  "color" = "black",
                                  "font-family" = "arial",
                                  "font-style" = "bold",
                                  "box-shadow" = "3px 3px rgba(0,0,0,0.15)",
                                  "font-size" = "20px",
                                  "border-color" = "rgba(0,0,0,0.15)"
                                ))) %>% 
    addDrawToolbar(
    targetGroup = "drawnItems",  # Agrupar los elementos dibujados
    editOptions = editToolbarOptions(
      selectedPathOptions = selectedPathOptions())) %>% 
  addFullscreenControl()
```

## column {.tabset width=70%}
### EMCA - 01 {.tabset}
#### PM10

```{r}
#| title: "PM10 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm10)
    ), 
    type = "line", 
    name = "PM10",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 45,
      dashStyle = "Solid",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### PM2.5

```{r}
#| title: "PM2.5 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm25)
    ), 
    type = "line", 
    name = "PM2.5",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 50,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 15,
      dashStyle = "Solid",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### NO2

```{r}
#| title: "NO2 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, no2)
    ), 
    type = "line", 
    name = "NO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
   hc_yAxis(min = 0, max = 210,  # Ajusta los límites del eje y
           plotLines = list(
             list(
               color = "red",         
               width = 2,
               value = 200,
               dashStyle = "Solid",
               label = list(text = "ECA",
                            align = "right",
                            x = -10,
                            style = list(color = "red",
                                         fontWeight = "bold"))),
             list(
               color = "darkgreen",         
               width = 2,
               value = 25,
               dashStyle = "Solid",
               label = list(text = "OMS",
                            align = "right",
                            x = -10,
                            style = list(color = "darkgreen",
                                         fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### O3

```{r}
#| title: "O3"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, o3)
    ), 
    type = "line", 
    name = "O3",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 120,
           plotLines = list(
             list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 100,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### CO

```{r}
#| title: "CO"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, co)
    ), 
    type = "line", 
    name = "CO",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 35200,
           plotLines = list(
             list(
               color = "red",         
      width = 2,
      value = 10000,
      dashStyle = "Solid",
      label = list(text = "ECA (8h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
      list(
               color = "red",         
      width = 2,
      value = 30000,
      dashStyle = "Solid",
      label = list(text = "ECA (1h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 10000,
      dashStyle = "Dash",
      label = list(text = "OMS (8h)",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))),
    list(
      color = "green",         
      width = 2,
      value = 35000,
      dashStyle = "Solid",
      label = list(text = "OMS (1h)",
                   align = "left",
                   x = -10,
                   style = list(color = "green",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### SO2

```{r}
#| title: "SO2"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, so2)
    ), 
    type = "line", 
    name = "SO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 280,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 250,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 40,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### H2S

```{r}
#| title: "H2S"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, h2s)
    ), 
    type = "line", 
    name = "H2S",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 180,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 150,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### Índice de Calidad de Aire

```{r}
source("Scripts/AQI.R")

aqi <- c(Bueno = "#00E400", Moderado = "#FFFF00",
         `No saludable para grupos sensibles` = "#FF7E00",
         xdd = "#FF0000",
         xdd2 = "#8F3F97", xdd3 = "#7E0023")

# param2 <- c(co =  bquote(bold(CO)),
#              no2 =  bquote(bold(NO[2])),
#              o3 = bquote(bold(O[3])),
#              pm10 = bquote(bold(PM[10])),
#              pm25 = bquote(bold(PM[2.5])),
#              so2 = bquote(bold(SO[2])))
param2 <- c(co =  "CO",
            no2 =  "NO2",
            o3 = "O3",
            pm10 = "PM10",
            pm25 = "PM2.5",
            so2 = "SO2")

aqi_index(df$eca) %>%
  mutate(aqi_ind = round(aqi_ind),
         fecha = as.Date(fecha, format = "%d-%B"),
         fecha = format(fecha, format = "%d")) %>%
  ggplot(aes(y = tipo,x = factor(fecha), fill = category)) +
  geom_tile(color = "white", lwd =1)+
  geom_text(aes(label = aqi_ind)) +
  scale_fill_manual(values = aqi) +
  scale_y_discrete(labels = param2) +
  labs(x = "Dias de junio", y = "",
    fill = "Categoría") +
    theme_minimal()+
  theme(legend.position = "bottom",
        plot.title = element_text(hjust = 0.5)) -> aqi1


plotly::ggplotly(aqi1) %>%
  layout(
    legend = list(
      orientation = 'h',
      x = 0.5,
      y = 1.07,
      xanchor = 'center',
      yanchor = 'top'
    )
  )
```

#### Tabla de datos

```{r}
#| title: "Datos diarios (ug/m3)"
library(DT)

n <- df$eca %>% 
  rename_at(
      vars(names(.)),
      ~ c("Fecha", "PM2.5", "PM10", 
          "NO2", "SO2", "H2S",
          "CO(1h)", "CO(8h)", "O3(8h)"))

datatable(
  n, extensions = 'Buttons',
  options = list(
    autowidth = TRUE,
    pageLength = 20,
    dom = 'Bfrtip',
    buttons = list(
      'copy', 'print', 
      list(
        extend = 'collection',
        buttons = c('csv', 'excel', 'pdf'),
        text = 'Download'
      )
    ),
    # Añadiendo estilos CSS
    initComplete = JS("function(settings, json) {",
                      "$(this.api().table().header()).css({'font-size': '0.7rem'});",
                      "$(this.api().rows().nodes()).css({'font-size': '0.7rem'});", # Estilo para el cuerpo
                      "$('.dt-button').css({'padding': '1px 2px'});", # Ajusta el padding como desees
                      "}")
  )
) %>% formatRound(
  columns = colnames(n %>% select(-Fecha)), digits = 2
)
```



### EMCA - 02 {.tabset}
#### PM10

```{r}
#| title: "PM10 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df1$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm10)
    ), 
    type = "line", 
    name = "PM10",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 45,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### PM2.5

```{r}
#| title: "PM2.5 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df1$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm25)
    ), 
    type = "line", 
    name = "PM2.5",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 50,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 15,
      dashStyle = "Dashed",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```
#### NO2

```{r}
#| title: "NO2 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df1$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, no2)
    ), 
    type = "line", 
    name = "NO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
   hc_yAxis(min = 0, max = 210,  # Ajusta los límites del eje y
           plotLines = list(
             list(
               color = "red",         
               width = 2,
               value = 200,
               dashStyle = "Solid",
               label = list(text = "ECA",
                            align = "right",
                            x = -10,
                            style = list(color = "red",
                                         fontWeight = "bold"))),
             list(
               color = "darkgreen",         
               width = 2,
               value = 25,
               dashStyle = "Dash",
               label = list(text = "OMS",
                            align = "right",
                            x = -10,
                            style = list(color = "darkgreen",
                                         fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### O3

```{r}
#| title: "PM2.5 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df1$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, o3)
    ), 
    type = "line", 
    name = "O3",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 120,
           plotLines = list(
             list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 100,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### CO

```{r}
#| title: "CO"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df1$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, co)
    ), 
    type = "line", 
    name = "CO",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 35200,
           plotLines = list(
             list(
               color = "red",         
      width = 2,
      value = 10000,
      dashStyle = "Solid",
      label = list(text = "ECA (8h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
      list(
               color = "red",         
      width = 2,
      value = 30000,
      dashStyle = "Solid",
      label = list(text = "ECA (1h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 10000,
      dashStyle = "Dash",
      label = list(text = "OMS (8h)",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))),
    list(
      color = "green",         
      width = 2,
      value = 35000,
      dashStyle = "Solid",
      label = list(text = "OMS (1h)",
                   align = "left",
                   x = -10,
                   style = list(color = "green",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### SO2

```{r}
#| title: "SO2"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df1$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, so2)
    ), 
    type = "line", 
    name = "SO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 280,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 250,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 40,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### H2S

```{r}
#| title: "H2S"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df1$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, h2s)
    ), 
    type = "line", 
    name = "H2S",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 180,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 150,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### Índice de Calidad de Aire

```{r}
aqi_index(df1$eca) %>%
  mutate(aqi_ind = round(aqi_ind),
         fecha = as.Date(fecha, format = "%d-%B"),
         fecha = format(fecha, format = "%d")) %>%
  ggplot(aes(y = tipo,x = factor(fecha), fill = category)) +
  geom_tile(color = "white", lwd =1)+
  geom_text(aes(label = aqi_ind)) +
  scale_fill_manual(values = aqi) +
  scale_y_discrete(labels = param2) +
  labs(x = "Dias de junio", y = "",
       fill = "Categoría") +
    theme_minimal()+
  theme(legend.position = "bottom",
        plot.title = element_text(hjust = 0.5)) -> aqi2

plotly::ggplotly(aqi2) %>%
  layout(
    legend = list(
      orientation = 'h',
      x = 0.5,
      y = 1.07,
      xanchor = 'center',
      yanchor = 'top'
    )
  )
```

#### Tabla de datos

```{r}
#| title: "Datos diarios (ug/m3)"
library(DT)

n1 <- df1$eca %>% 
  rename_at(
      vars(names(.)),
      ~ c("Fecha", "PM2.5", "PM10", 
          "NO2", "SO2", "H2S",
          "CO(1h)", "CO(8h)", "O3(8h)"))

datatable(
  n1, extensions = 'Buttons',
  options = list(
    autowidth = TRUE,
    pageLength = 20,
    dom = 'Bfrtip',
    buttons = list(
      'copy', 'print', 
      list(
        extend = 'collection',
        buttons = c('csv', 'excel', 'pdf'),
        text = 'Download'
      )
    ),
    # Añadiendo estilos CSS
    initComplete = JS("function(settings, json) {",
                      "$(this.api().table().header()).css({'font-size': '0.7rem'});",
                      "$(this.api().rows().nodes()).css({'font-size': '0.7rem'});", # Estilo para el cuerpo
                      "$('.dt-button').css({'padding': '1px 2px'});", # Ajusta el padding como desees
                      "}")
  )
) %>% formatRound(
  columns = colnames(n %>% select(-Fecha)), digits = 2
)
```




### EMCA - 03 {.tabset}
#### PM10

```{r}
#| title: "PM10 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df2$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm10)
    ), 
    type = "line", 
    name = "PM10",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 45,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### PM2.5

```{r}
#| title: "PM2.5 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df2$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm25)
    ), 
    type = "line", 
    name = "PM2.5",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 50,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 15,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```
#### NO2

```{r}
#| title: "NO2 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df2$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, no2)
    ), 
    type = "line", 
    name = "NO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
   hc_yAxis(min = 0, max = 210,  # Ajusta los límites del eje y
           plotLines = list(
             list(
               color = "red",         
               width = 2,
               value = 200,
               dashStyle = "Solid",
               label = list(text = "ECA",
                            align = "right",
                            x = -10,
                            style = list(color = "red",
                                         fontWeight = "bold"))),
             list(
               color = "darkgreen",         
               width = 2,
               value = 25,
               dashStyle = "Dash",
               label = list(text = "OMS",
                            align = "right",
                            x = -10,
                            style = list(color = "darkgreen",
                                         fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### O3

```{r}
#| title: "o3"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df2$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, o3)
    ), 
    type = "line", 
    name = "O3",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 120,
           plotLines = list(
             list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 100,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### CO

```{r}
#| title: "CO"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df2$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, co)
    ), 
    type = "line", 
    name = "CO",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 35200,
           plotLines = list(
             list(
               color = "red",         
      width = 2,
      value = 10000,
      dashStyle = "Solid",
      label = list(text = "ECA (8h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
      list(
               color = "red",         
      width = 2,
      value = 30000,
      dashStyle = "Solid",
      label = list(text = "ECA (1h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 10000,
      dashStyle = "Dash",
      label = list(text = "OMS (8h)",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))),
    list(
      color = "green",         
      width = 2,
      value = 35000,
      dashStyle = "Solid",
      label = list(text = "OMS (1h)",
                   align = "left",
                   x = -10,
                   style = list(color = "green",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### SO2

```{r}
#| title: "SO2"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df2$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, so2)
    ), 
    type = "line", 
    name = "SO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 280,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 250,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 40,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### H2S

```{r}
#| title: "H2S"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df2$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, h2s)
    ), 
    type = "line", 
    name = "H2S",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 180,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 150,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### Índice de Calidad de Aire

```{r}

aqi_index(df2$eca) %>%
  mutate(aqi_ind = round(aqi_ind),
         fecha = as.Date(fecha, format = "%d-%B"),
         fecha = format(fecha, format = "%d")) %>%
  ggplot(aes(y = tipo,x = factor(fecha), fill = category)) +
  geom_tile(color = "white", lwd =1)+
  geom_text(aes(label = aqi_ind)) +
  scale_fill_manual(values = aqi) +
  scale_y_discrete(labels = param2) +
  labs(x = "Dias de junio", y = "",
    fill = "Categoría") +
    theme_minimal()+
  theme(legend.position = "bottom",
        plot.title = element_text(hjust = 0.5)) -> aqi3


plotly::ggplotly(aqi3) %>%
  layout(
    legend = list(
      orientation = 'h',
      x = 0.5,
      y = 1.07,
      xanchor = 'center',
      yanchor = 'top'
    )
  )
```

#### Tabla de datos

```{r}
#| title: "Datos diarios (ug/m3)"
library(DT)

n3 <- df2$eca %>% 
  rename_at(
      vars(names(.)),
      ~ c("Fecha", "PM2.5", "PM10", 
          "NO2", "SO2", "H2S",
          "CO(1h)", "CO(8h)", "O3(8h)"))

datatable(
  n3, extensions = 'Buttons',
  options = list(
    autowidth = TRUE,
    pageLength = 20,
    dom = 'Bfrtip',
    buttons = list(
      'copy', 'print', 
      list(
        extend = 'collection',
        buttons = c('csv', 'excel', 'pdf'),
        text = 'Download'
      )
    ),
    # Añadiendo estilos CSS
    initComplete = JS("function(settings, json) {",
                      "$(this.api().table().header()).css({'font-size': '0.7rem'});",
                      "$(this.api().rows().nodes()).css({'font-size': '0.7rem'});", # Estilo para el cuerpo
                      "$('.dt-button').css({'padding': '1px 2px'});", # Ajusta el padding como desees
                      "}")
  )
) %>% formatRound(
  columns = colnames(n %>% select(-Fecha)), digits = 2
)
```



### EMCA - 04 {.tabset}
#### PM10

```{r}
#| title: "PM10 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df3$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm10)
    ), 
    type = "line", 
    name = "PM10",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 45,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### PM2.5

```{r}
#| title: "PM2.5 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df3$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, pm25)
    ), 
    type = "line", 
    name = "PM2.5",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 50,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 15,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```
#### NO2

```{r}
#| title: "NO2 horario"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df3$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, no2)
    ), 
    type = "line", 
    name = "NO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
   hc_yAxis(min = 0, max = 210,  # Ajusta los límites del eje y
           plotLines = list(
             list(
               color = "red",         
               width = 2,
               value = 200,
               dashStyle = "Solid",
               label = list(text = "ECA",
                            align = "right",
                            x = -10,
                            style = list(color = "red",
                                         fontWeight = "bold"))),
             list(
               color = "darkgreen",         
               width = 2,
               value = 25,
               dashStyle = "Dash",
               label = list(text = "OMS",
                            align = "right",
                            x = -10,
                            style = list(color = "darkgreen",
                                         fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### O3

```{r}
#| title: "o3"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df3$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, o3)
    ), 
    type = "line", 
    name = "O3",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 120,
           plotLines = list(
             list(
      color = "red",         
      width = 2,
      value = 100,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 100,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### CO

```{r}
#| title: "CO"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df3$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, co)
    ), 
    type = "line", 
    name = "CO",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 35200,
           plotLines = list(
             list(
               color = "red",         
      width = 2,
      value = 10000,
      dashStyle = "Solid",
      label = list(text = "ECA (8h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
      list(
               color = "red",         
      width = 2,
      value = 30000,
      dashStyle = "Solid",
      label = list(text = "ECA (1h)",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 10000,
      dashStyle = "Dash",
      label = list(text = "OMS (8h)",
                   align = "left",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))),
    list(
      color = "green",         
      width = 2,
      value = 35000,
      dashStyle = "Solid",
      label = list(text = "OMS (1h)",
                   align = "left",
                   x = -10,
                   style = list(color = "green",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```


#### SO2

```{r}
#| title: "SO2"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df3$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, so2)
    ), 
    type = "line", 
    name = "SO2",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 280,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 250,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))),
    list(
      color = "darkgreen",         
      width = 2,
      value = 40,
      dashStyle = "Dash",
      label = list(text = "OMS",
                   align = "right",
                   x = -10,
                   style = list(color = "darkgreen",
                                fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### H2S

```{r}
#| title: "H2S"

highchart() %>%
  hc_chart(zoomType = "x") %>% 
  hc_add_series(
    data = list_parse2(
      df3$df %>% mutate(
        date = as.numeric(date) * 1000) %>% 
        select(date, h2s)
    ), 
    type = "line", 
    name = "H2S",
    color = "#6BAED6"  # Cambia la línea a color celeste
  )  %>%
  hc_xAxis(type = "datetime") %>% 
  hc_yAxis(min = 0, max = 180,
           plotLines = list(
    list(
      color = "red",         
      width = 2,
      value = 150,
      dashStyle = "Solid",
      label = list(text = "ECA",
                   align = "right",
                   x = -10,
                   style = list(color = "red",
                        fontWeight = "bold"))))) %>% 
  hc_exporting(
    enabled = TRUE,
    buttons = list(
      contextButton = list(
        menuItems = c("downloadPNG",
                      "downloadCSV",
                      "downloadXLS",
                      "downloadPDF"))))
```

#### Índice de Calidad de Aire

```{r}

aqi_index(df3$eca) %>%
  mutate(aqi_ind = round(aqi_ind),
         fecha = as.Date(fecha, format = "%d-%B"),
         fecha = format(fecha, format = "%d")) %>%
  ggplot(aes(y = tipo,x = factor(fecha), fill = category)) +
  geom_tile(color = "white", lwd =1)+
  geom_text(aes(label = aqi_ind)) +
  scale_fill_manual(values = aqi) +
  scale_y_discrete(labels = param2) +
  labs(x = "Dias de junio", y = "",
    fill = "Categoría") +
    theme_minimal()+
  theme(legend.position = "bottom",
        plot.title = element_text(hjust = 0.5)) -> aqi4


plotly::ggplotly(aqi4) %>%
  layout(
    legend = list(
      orientation = 'h',
      x = 0.5,
      y = 1.07,
      xanchor = 'center',
      yanchor = 'top'
    )
  )
```

#### Tabla de datos

```{r}
#| title: "Datos diarios (ug/m3)"
library(DT)

n4 <- df3$eca %>% 
  rename_at(
      vars(names(.)),
      ~ c("Fecha", "PM2.5", "PM10", 
          "NO2", "SO2", "H2S",
          "CO(1h)", "CO(8h)", "O3(8h)"))

datatable(
  n4, extensions = 'Buttons',
  options = list(
    autowidth = TRUE,
    pageLength = 20,
    dom = 'Bfrtip',
    buttons = list(
      'copy', 'print', 
      list(
        extend = 'collection',
        buttons = c('csv', 'excel', 'pdf'),
        text = 'Download'
      )
    ),
    # Añadiendo estilos CSS
    initComplete = JS("function(settings, json) {",
                      "$(this.api().table().header()).css({'font-size': '0.7rem'});",
                      "$(this.api().rows().nodes()).css({'font-size': '0.7rem'});", # Estilo para el cuerpo
                      "$('.dt-button').css({'padding': '1px 2px'});", # Ajusta el padding como desees
                      "}")
  )
) %>% formatRound(
  columns = colnames(n %>% select(-Fecha)), digits = 2
)
```

# Datos del 2025
Estamos trabajando en eso...

<!-- # Descarga de datos -->

<!-- | Descripción                             | Links de descarga          | -->
<!-- |-----------------------------------------|----------------------------| -->
<!-- | Datos diarios de Calidad de aire del 2023 | [eca_2024](input/eca_2024.csv)     | -->
<!-- | Datos diarios de Calidad de aire del 2024 | [eca_2024](input/eca_2024.csv)     | -->
<!-- | Reporte de valores diarios mensuales   | [eca_2024](input/eca_2024.csv) | -->


<!-- confirmar los cambios en git: -->
<!-- git add . -->

<!-- hacer un commit -->
<!-- git commit -m "nombredelcommit" -->

<!-- Hacer el push -->
<!-- git push -u origin main -->


